
^(+Number1, +Number2, ?Result)

   Evaluates the expression Number1 "to the power of" Number2 and unifies the
resulting value with Result.



Arguments
   +Number1            A number.
   +Number2            A number.
   ?Result             A variable or a number.

Type
   Arithmetic

Description
   This predicate is used by the ECLiPSe compiler to expand evaluable
   arithmetic expressions.  So the call to ^(Number1, Number2, Result) is
   equivalent to

    Result is Number1 ^ Number2

    which should be preferred for portability.

   The result is of type float if any of the arguments is a float. 
   When an integer is raised to the power of a negative integer, the
   result type depends on the value of the global flag prefer_rationals.
   If it is on, it is a rational, otherwise a float.  When the exponent
   is not an integer, the result is of type float.


   In coroutining mode, if Number1 or Number2 are free variables, the call
   to ^/3 is delayed until these variables are instantiated.




Resatisfiable
      No

Fail Conditions
      Fails if the result of the evaluation does not unify with Result.



Exceptions
     4 --- Number1 or Number2 is not instantiated (non-coroutining mode    only).
     5 --- Result is of a different type than the evaluation result.
    24 --- Number1 or Number2 is not of a numeric type.
    24 --- Result is neither a number nor a variable.
    20 --- Illegal arithmetic operation:  Number1 is negative and    Number2 is no integral number.
    20 --- Illegal arithmetic operation:  Number1 and Number2 are both    zero.

Examples
   
Success:
      ^(5, 3, 125).
      ^(-5, 3, -125).
      ^(5, -2, 0.04).
      ^(5, 2.2, 34.493244).
      ^(5.0, 2, 25.0).
Fail:
      ^(1, 2, 3).
Error:
      ^(A, 2, 6).             (Error 4).
      ^(1, 2, 3.0).           (Error 5).
      ^(-5, 0.5, X).          (Error 20).
      ^(2 + 3, 2, 25).        (Error 24).
      ^(5, 2, r).             (Error 24).





See Also
   is / 2, get_flag / 2, set_flag / 2
