
/(+Number1, +Number2, ?Result)

   Evaluates the quotient Number1 / Number2 and unifies the resulting value
with Result.



Arguments
   +Number1            A number.
   +Number2            A number.
   ?Result             A variable or float (resp. rational).

Type
   Arithmetic

Description
   This predicate is used by the ECLiPSe compiler to expand evaluable
   arithmetic expressions.  So the call to /(Number1, Number2, Result) is
   equivalent to

    Result is Number1 / Number2

    which should be preferred for portability.

   The result type of the division depends on the value of the global flag
   prefer_rationals.  When it is off, the result is a float,
   when it is on, the result is a rational.  In coroutining mode, if
   Number1 or Number2 are free variables, the call to //3 is delayed until
   these variables are instantiated.




Resatisfiable
      No

Fail Conditions
      Fails if the result of the evaluation does not unify with Result.



Exceptions
     4 --- Number1 or Number2 is not instantiated (non-coroutining mode    only).
     5 --- Result is a number but not a float (resp. rational).
    24 --- Number1 or Number2 is not of a numeric type.
    24 --- Result is neither a number nor a variable.
    20 --- Illegal arithmetic operation:  division by 0
    20 --- floating point overflow

Examples
   
Success:
    /(10, 2, 5.0).
    /(10, -2.0, -5.0).
    /(9, 12, 3_4).      (with set_flag(prefer_rationals, on))
Fail:
    /(1, 2, 1.0).
Error:
    /(A, 2, 6.0).            (Error 4).
    /(5, 2, r).              (Error 5).
    /(6, 2, 3).              (Error 5).
    /(2, 0, Result).         (Error 20).
    /(4 + 2, 2, 12).         (Error 24).





See Also
   is / 2, get_flag / 2, set_flag / 2
