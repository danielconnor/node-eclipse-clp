
-(+Number1, +Number2, ?Result)

   Evaluates the difference Number1 - Number2 and unifies the resulting value
with Result.



Arguments
   +Number1            A number.
   +Number2            A number.
   ?Result             A variable or a number.

Type
   Arithmetic

Description
   This predicate is used by the ECLiPSe compiler to expand evaluable
   arithmetic expressions.  So the call to -(Number1, Number2, Result) is
   equivalent to

    Result is Number1 - Number2

    which should be preferred for portability.

   The result is of type breal if any of the arguments is a breal,
   else float if any of the arguments is a float, else rational if any
   of the arguments is a rational.  Only when both arguments are
   integers is the result an integer.


   In coroutining mode, if Number1 or Number2 are free variables, the call
   to -/3 is delayed until these variables are instantiated.




Resatisfiable
      No

Fail Conditions
      Fails if the result of the evaluation does not unify with Result.



Exceptions
     4 --- Number1 or Number2 is not instantiated (non-coroutining mode    only).
     5 --- Result is of a different type than the evaluation result.
    24 --- Number1 or Number2 is not of a numeric type.
    24 --- Result is neither a number nor a variable.
    20 --- floating point overflow

Examples
   
Success:
      -(5, 2, 3).            (gives Result = 3)
      -(5, -2.0, Result).    (gives Result = 7.0)
Fail:
      -(1, 2, 3).
Error:
      -(A, 2, 6).             (Error 4).
      -(1, 2, 3.0).           (Error 5).
      -(4 + 1, 2, 3).         (Error 24).
      -(5, 2, r).             (Error 24).





See Also
   is / 2
