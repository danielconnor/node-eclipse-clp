
store_set(+StoreHandle, ++Key, ?Value)

   Make an entry into a store object

Arguments
   StoreHandle         A store handle or store name
   Key                 A ground term
   Value               An arbitrary term

Type
   Non-logical Variables, Arrays, Bags, Shelves and Stores

Description
	This stores an arbitrary ECLiPSe term under a given key into
	the given store object. If an entry for this key already exists,
	it will be replaced by the new entry. 

	The key can be arbitrarily complex, but must be a ground term.
	The value can be an arbitrary term, and may contain uninstantiated
	variables. Note that values are copied when being stored or
	retrieved, therefore a retrieved nonground value will contain
	fresh variables rather than the original ones (this is similar
	to the behaviour of bags, shelves and global variables).

	The complexity of the store operation is linear in both the size
	of the key and the value, since both are being copied. For indexing
	purposes, a hash value is computed from the key, and the full depth
	of the key is taken into account.

	Note: If StoreHandle is not a handle, then it must be an atom or a
	compound term, and the store is identified by this term's toplevel
	functor together with the context module.

    

Resatisfiable
   No

Fail Conditions
   None

Exceptions
     4 --- StoreHandle is uninstantiated
     4 --- Key is not ground
     5 --- StoreHandle is neither atom nor compound term nor store handle
    45 --- StoreHandle is not the name of a store

Examples
   

    ?- store_create(Handle),
       store_set(Handle, tom, 12345),
       store_set(Handle, name(dick,tracy), phone(42376,home)),
       store_set(Handle, numbers:prime, [2,3,5,7|_More]),
       stored_keys_and_values(Handle, Data).

    Handle = 'STORE'(16'003130e8)
    Data = [(numbers : prime) - [2, 3, 5, 7|_123],
            tom - 12345,
	    name(dick, tracy) - phone(42376, home)]
    Yes (0.00s cpu)
    

See Also
   store / 1, local / 1, store_erase / 1, store_get / 3, store_delete / 2, store_contains / 2, stored_keys / 2, stored_keys_and_values / 2, store_create / 1, store_count / 2, store_inc / 2
