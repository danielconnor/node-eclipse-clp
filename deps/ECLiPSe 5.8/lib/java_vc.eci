:- module(java_vc).
:- export find_java / 1.
:- export stop_vc / 1.
:- export start_vc / 1.
:- comment(summary, "Module for the Java Visualisation Client").
:- comment(author, "Josh Singer").
:- comment(copyright, "Parc Technologies Ltd. and IC-Parc 2001-2002").
:- comment(desc, html("<P> Module for the management of the Java Visualisation Client (VC) from ECLiPSe. The Java VC is an extensible, customisable, graphical visualisation tool for ECLiPSe implemented in Java. A new Java VC can be started using the predicate <code>start_vc/1</code>. While the Java VC is running, it will react automatically to the creation of <i>viewables</i> during ECLiPSe execution. For more information on how to declare and use viewables see the documentation for <code>lib(viewable)</code>. The Java VC can be terminated from ECLiPSe using the predicate <code>stop_vc/1</code>.\n           \n")).
:- comment(find_java / 1, [amode : find_java(-), args : ["JavaLocation" : "A string: the path of the known Java Runtime Environment installation."], summary : "Determine the path of the known Java installation.", desc : html("If this predicate succeeds, JavaLocation is instantiated to the root directory of the Java Runtime Environment which ECLiPSe will use to run a new Java VC. If the predicate fails, this means that to use the you need to install a Java Runtime Environment (JRE) on your computer (at least version 1.2.2) and then re-run the installation script. "), resat : no]).
:- comment(start_vc / 1, [amode : start_vc(-), args : ["VisClientName" : "An atom; the name of the new visualisation client."], summary : "Start a new Java Visualisation Client", desc : html("This predicates starts a new Java Visualisation Client (VC). The VC survives backtracking over the <code>start_vc/1</code> goal, and persists until it is explicitly terminated. <i>VisClientName</i> becomes instantiated to an atom which can be used when the VC is to be stopped. <p>For <code>start_vc</code> to work correctly, ECLiPSe needs to know where to find the Java installation. To check whether this is so, use <code>find_java/1</code>. If the result of <code>find_java/1</code> is not the root directory of a Java installation (at least version 1.2.2) then the behaviour of <code>start_vc/1</code> prints an error message and fails.    \n\n\t"), see_also : [stop_vc / 1, find_java / 1], resat : no]).
:- comment(stop_vc / 1, [amode : stop_vc(+), args : ["VisClientName" : "An atom; the name of the client to be terminated."], summary : "Terminate a running Java visualisation client.", desc : html("Terminate a running Java visualisation client which was started using <code>start_vc/1</code>. The name atom is displayed at the top of the client's window."), see_also : [start_vc / 1], resat : no]).
